buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:1.2.0'
    }
}

ext.githubDownloadFolder = "repositories"

project.ext.repo = [
        sistcoop        : [
                folderName     : "sistcoop",
                iso3166        : [folderName: "iso3166", uri: "https://github.com/sistcoop/iso3166.git"],
                iso4217        : [folderName: "iso4217", uri: "https://github.com/sistcoop/iso4217.git"],
                ubigeo         : [folderName: "ubigeo", uri: "https://github.com/sistcoop/ubigeo.git"],
                persona        : [folderName: "persona", uri: "https://github.com/sistcoop/persona.git"],
                rrhh           : [folderName: "rrhh", uri: "https://github.com/sistcoop/rrhh.git"],
                cooperativa    : [folderName: "cooperativa", uri: "https://github.com/sistcoop/cooperativa.git"],
                socio          : [folderName: "socio", uri: "https://github.com/sistcoop/socio.git"],
                producto       : [folderName: "producto", uri: "https://github.com/sistcoop/producto.git"],
                credito        : [folderName: "credito", uri: "https://github.com/sistcoop/credito.git"],
                sistcoopJsBower: [folderName: "sistcoop-js-bower", uri: "https://github.com/sistcoop/sistcoop-js-bower.git"],
        ],
        restangularFiles: [
                folderName   : "sistcoop-restangularfiles",
                sgIso3166    : [folderName: "sg-iso3166", uri: "https://github.com/sistcoop-restangularfiles/sg-iso3166.git"],
                sgIso4217    : [folderName: "sg-iso4217", uri: "https://github.com/sistcoop-restangularfiles/sg-iso4217.git"],
                sgUbigeo     : [folderName: "sg-ubigeo", uri: "https://github.com/sistcoop-restangularfiles/sg-ubigeo.git"],
                sgPersona    : [folderName: "sg-persona", uri: "https://github.com/sistcoop-restangularfiles/sg-persona.git"],
                sgRrhh       : [folderName: "sg-rrhh", uri: "https://github.com/sistcoop-restangularfiles/sg-rrhh.git"],
                sgCooperativa: [folderName: "sg-cooperativa", uri: "https://github.com/sistcoop-restangularfiles/sg-cooperativa.git"],
                sgSocio      : [folderName: "sg-socio", uri: "https://github.com/sistcoop-restangularfiles/sg-socio.git"],
                sgProducto   : [folderName: "sg-producto", uri: "https://github.com/sistcoop-restangularfiles/sg-producto.git"]
        ],
        angularFiles    : [
                folderName   : "sistcoop-angularfiles",
                sgUtils      : [folderName: "sg-utils", uri: "https://github.com/sistcoop-angularjsfiles/sg-utils.git"],
                uiSelectUtils: [folderName: "sg-select-utils", uri: "https://github.com/sistcoop-angularjsfiles/ui-select-utils.git"]
        ],
        meanjsfiles     : [
                folderName: "sistcoop-meanjsfiles",
                mean      : [folderName: "mean", uri: "https://github.com/sistcoop-meanjsfiles/mean.git"]
        ]
]

/**
 * Github configurations*/
import org.ajoberstar.grgit.*

def cloneGit(cloneOptions) {
    File folder = new File(cloneOptions.dir)
    if (!folder.exists()) {
        println "Init cloning ${cloneOptions.uri}"
        Grgit.clone(cloneOptions).close()
    } else {
        println "folder ${cloneOptions.dir} already exists"
    }
}

def generateCloneOptions(parentFolderName, repositorie) {
    def dir = ext.githubDownloadFolder + "/" + parentFolderName + "/" + repositorie.folderName
    def cloneOptions = [dir: dir, uri: repositorie.uri]
    return cloneOptions
}

def releaseTag (cloneOptions) {
    def credential = [
            username: "",
            password: ""
    ]

    def repo = Grgit.open(new File(cloneOptions.dir), new Credentials(username: credential.username, password: credential.password))
    def status = repo.status()
    if (status.unstaged.added || status.unstaged.modified || status.unstaged.removed || status.staged.added || status.staged.modified || status.staged.removed) {
        repo.commit(all: true, message: "Release ${project.version}", amend: false)
    }
    repo.tag.add(name: project.version, message: "Releasing ${project.version}", force: true)

    repo.push()
    repo.push(tags: true)
    repo.close()

    println "Releasing ${cloneOptions.uri} to tag ${project.version} success"
}

task cloneAllRestApi << {
    cloneGit(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.iso3166));
    cloneGit(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.iso4217));
    cloneGit(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.ubigeo));
    cloneGit(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.persona));
    cloneGit(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.rrhh));
    cloneGit(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.cooperativa));
    cloneGit(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.socio));
    cloneGit(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.producto));
    cloneGit(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.credito));
    cloneGit(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.sistcoopJsBower));

    cloneGit(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgIso3166));
    cloneGit(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgIso4217));
    cloneGit(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgUbigeo));
    cloneGit(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgPersona));
    cloneGit(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgRrhh));
    cloneGit(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgCooperativa));
    cloneGit(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgSocio));
    cloneGit(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgProducto));

    cloneGit(generateCloneOptions(project.ext.repo.angularFiles.folderName, project.ext.repo.angularFiles.sgUtils));
    cloneGit(generateCloneOptions(project.ext.repo.angularFiles.folderName, project.ext.repo.angularFiles.uiSelectUtils));

    cloneGit(generateCloneOptions(project.ext.repo.meanjsfiles.folderName, project.ext.repo.meanjsfiles.mean));
}

task releaseAllTag << {
    releaseTag(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.iso3166));
    releaseTag(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.iso4217));
    releaseTag(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.ubigeo));
    releaseTag(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.persona));
    releaseTag(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.rrhh));
    releaseTag(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.cooperativa));
    releaseTag(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.socio));
    releaseTag(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.producto));
    releaseTag(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.credito));
    releaseTag(generateCloneOptions(project.ext.repo.sistcoop.folderName, project.ext.repo.sistcoop.sistcoopJsBower));

    releaseTag(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgIso3166));
    releaseTag(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgIso4217));
    releaseTag(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgUbigeo));
    releaseTag(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgPersona));
    releaseTag(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgRrhh));
    releaseTag(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgCooperativa));
    releaseTag(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgSocio));
    releaseTag(generateCloneOptions(project.ext.repo.restangularFiles.folderName, project.ext.repo.restangularFiles.sgProducto));

    releaseTag(generateCloneOptions(project.ext.repo.angularFiles.folderName, project.ext.repo.angularFiles.sgUtils));
    releaseTag(generateCloneOptions(project.ext.repo.angularFiles.folderName, project.ext.repo.angularFiles.uiSelectUtils));

    releaseTag(generateCloneOptions(project.ext.repo.meanjsfiles.folderName, project.ext.repo.meanjsfiles.mean));
}